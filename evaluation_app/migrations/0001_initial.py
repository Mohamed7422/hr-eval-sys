# Generated by Django 5.2.1 on 2025-07-06 23:30

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=180)),
                ('address', models.TextField()),
                ('industry', models.CharField(max_length=100)),
                ('size', models.CharField(choices=[('SMALL', 'Small'), ('MEDIUM', 'Medium'), ('LARGE', 'Large')], max_length=6)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('competence_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('category', models.CharField(choices=[('CORE', 'Core'), ('LEADERSHIP', 'Leadership'), ('FUNCTIONAL', 'Functional')], max_length=12)),
                ('required_level', models.PositiveSmallIntegerField()),
                ('actual_level', models.PositiveSmallIntegerField()),
                ('weight', models.PositiveSmallIntegerField()),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('avatar', models.URLField(blank=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('HR', 'HR'), ('HOD', 'Head-of-Dept'), ('LM', 'Line Manager'), ('EMP', 'Employee')], max_length=8)),
                ('title', models.CharField(blank=True, max_length=120)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeightsConfiguration',
            fields=[
                ('level_name', models.CharField(choices=[('IC', 'Individual Contributor'), ('SUPERVISORY', 'Supervisory'), ('MIDDLE', 'Middle Management')], max_length=12, primary_key=True, serialize=False)),
                ('core_weight', models.PositiveSmallIntegerField()),
                ('leadership_weight', models.PositiveSmallIntegerField()),
                ('functional_weight', models.PositiveSmallIntegerField()),
                ('competency_weight', models.PositiveSmallIntegerField()),
                ('objective_weight', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Weights configuration',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('employee_count', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='evaluation_app.company')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='managed_departments', to='evaluation_app.user')),
            ],
            options={
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('managerial_level', models.CharField(choices=[('IC', 'Individual Contributor'), ('SUPERVISORY', 'Supervisory'), ('MIDDLE', 'Middle Management')], max_length=12)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DEFAULT_ACTIVE', 'Default Active')], max_length=16)),
                ('join_date', models.DateField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='evaluation_app.company')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeCompetency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation_app.competency')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation_app.department')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation_app.employee')),
            ],
            options={
                'unique_together': {('employee', 'department')},
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='departments',
            field=models.ManyToManyField(related_name='employees', through='evaluation_app.EmployeeDepartment', to='evaluation_app.department'),
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('evaluation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('ANNUAL', 'Annual'), ('QUARTERLY', 'Quarterly'), ('OPTIONAL', 'Optional')], max_length=10)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_HOD', 'Pending HoD Approval'), ('PENDING_HR', 'Pending HR Approval'), ('EMP_REVIEW', 'Employee Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('COMPLETED', 'Completed')], max_length=20)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('period', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('competencies', models.ManyToManyField(related_name='employees', through='evaluation_app.EmployeeCompetency', to='evaluation_app.competency')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='evaluation_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation_app.employee')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation_app.evaluation')),
            ],
        ),
        migrations.AddField(
            model_name='employeecompetency',
            name='evaluation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation_app.evaluation'),
        ),
        migrations.AddField(
            model_name='competency',
            name='evaluation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competency_set', to='evaluation_app.evaluation'),
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('objective_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target', models.TextField(blank=True)),
                ('achieved', models.TextField(blank=True)),
                ('weight', models.PositiveSmallIntegerField()),
                ('status', models.CharField(choices=[('COMPLETED', 'Completed'), ('IN_PROGRESS', 'In-progress'), ('NOT_STARTED', 'Not started')], max_length=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objective_set', to='evaluation_app.evaluation')),
            ],
        ),
        migrations.AddField(
            model_name='evaluation',
            name='objectives',
            field=models.ManyToManyField(related_name='employees', through='evaluation_app.EmployeeObjective', to='evaluation_app.objective'),
        ),
        migrations.AddField(
            model_name='employeeobjective',
            name='objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation_app.objective'),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='evaluation_app.user'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to='evaluation_app.user'),
        ),
        migrations.AlterUniqueTogether(
            name='employeecompetency',
            unique_together={('evaluation', 'employee', 'competency')},
        ),
        migrations.AlterUniqueTogether(
            name='employeeobjective',
            unique_together={('evaluation', 'employee', 'objective')},
        ),
    ]
